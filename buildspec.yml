version: 0.2

env:
  parameter-store:
    DOCKER_USERNAME: "/streamlit/docker-credentials/username"
    DOCKER_PASSWORD: "/streamlit/docker-credentials/password"
  variables:
    DOCKER_HUB_REPO: "divijeshhub/pikube"

phases:
  install:
    runtime-versions:
      python: 3.12
    commands:
      - echo Installing dependencies...
      - pip install --upgrade pip
      - pip install -r requirements.txt

  pre_build:
    commands:
      - echo "Fetching branch name from CodeBuild environment variables..."
      - echo "CODEBUILD_SOURCE_VERSION: $CODEBUILD_SOURCE_VERSION"
      - echo "CODEBUILD_WEBHOOK_HEAD_REF: $CODEBUILD_WEBHOOK_HEAD_REF"

      # Extract the branch name
      - |
        if [ -n "$CODEBUILD_WEBHOOK_HEAD_REF" ]; then
          export BRANCH_NAME=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | sed 's|refs/heads/||')
          echo "Branch name (from CODEBUILD_WEBHOOK_HEAD_REF) is $BRANCH_NAME"
        elif [ -n "$CODEBUILD_SOURCE_VERSION" ]; then
          export BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          echo "Branch name (from git) is $BRANCH_NAME"
        fi

      # Fallback if branch name is still not set
      - |
        if [ -z "$BRANCH_NAME" ]; then
          echo "Branch name could not be determined, falling back to default."
          export BRANCH_NAME="default-branch"
        fi

      - export DOCKER_TAG="${BRANCH_NAME//[^a-zA-Z0-9_-]/_}-v1"
      - export DEPLOYMENT_NAME="${BRANCH_NAME//[^a-zA-Z0-9_-]/_}-container"
      - echo "Docker Tag: $DOCKER_TAG"
      - echo "Deployment Name: $DEPLOYMENT_NAME"

      - echo "Building Docker image with tag $DOCKER_TAG..."
      - docker build -t $DOCKER_HUB_REPO:$DOCKER_TAG .

  post_build:
    commands:
      - echo "Pushing Docker image to DockerHub..."
      - docker push $DOCKER_HUB_REPO:$DOCKER_TAG
      - echo "Storing DOCKER_TAG and DEPLOYMENT_NAME in SSM Parameter Store..."
      - aws ssm put-parameter --name "/myapp/DOCKER_TAG" --value "$DOCKER_TAG" --type "String" --overwrite
      - aws ssm put-parameter --name "/myapp/DEPLOYMENT_NAME" --value "$DEPLOYMENT_NAME" --type "String" --overwrite
      - aws ssm put-parameter --name "/myapp/DOCKER_HUB_REPO" --value "$DOCKER_HUB_REPO" --type "String" --overwrite

artifacts:
  files:
    - appspec.yml
    - application_stop.sh
    - after_install.sh
    - before_install.sh
    - application_start.sh
    - validate_service.sh
    - Dockerfile
    - requirements.txt
    - ui.py

cache:
  paths:
    - '/root/.cache/pip/**/*'

