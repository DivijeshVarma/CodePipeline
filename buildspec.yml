version: 0.2

env:
  parameter-store:
    DOCKER_USERNAME: "/streamlit/docker-credentials/username"
    DOCKER_PASSWORD: "/streamlit/docker-credentials/password"
  variables:
    DOCKER_HUB_REPO: "divijeshhub/pikube"

phases:
  install:
    runtime-versions:
      python: 3.12
    commands:
      - echo Installing dependencies...
      - pip install --upgrade pip
      - pip install -r requirements.txt

  pre_build:
    commands:
      - echo "Setting Version Variable"
      - export VERSION="development-v2"
      - export CONTAINER="Stream"

      # Docker Login
      - echo "Logging into Docker Hub..."
      - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - echo "Docker login successful"

      # Set Docker tag and deployment name
      - export DOCKER_TAG="${VERSION}"  # Replace invalid characters with underscore (_)
      - export DEPLOYMENT_NAME="${CONTAINER}-${VERSION}-$(date +'%Y%m%d%H%M%S') "  # Ensure valid characters in deployment name

      - echo "Docker Tag $DOCKER_TAG, Deployment Name $DEPLOYMENT_NAME"

      - echo "Building Docker image with tag $DOCKER_TAG..."
      - docker build -t $DOCKER_HUB_REPO:$DOCKER_TAG .

      - echo "Running Trivy security scan..."
      - rpm -ivh https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.rpm
      - trivy image $DOCKER_HUB_REPO:$DOCKER_TAG

      # Set execute permissions on all scripts
      - echo "Setting execute permissions on all scripts..."
      - chmod +x before_install.sh
      - chmod +x after_install.sh
      - chmod +x application_start.sh
      - chmod +x application_stop.sh
      - chmod +x validate_service.sh

  post_build:
    commands:
      - echo "Pushing Docker image to DockerHub..."
      - docker push $DOCKER_HUB_REPO:$DOCKER_TAG

      # Save DOCKER_TAG and DEPLOYMENT_NAME to a file for use during deployment
      - echo "Storing DOCKER_TAG and DEPLOYMENT_NAME in SSM Parameter Store..."
      - aws ssm put-parameter --name "/myapp/DOCKER_TAG" --value "$DOCKER_TAG" --type "String" --overwrite
      - aws ssm put-parameter --name "/myapp/DEPLOYMENT_NAME" --value "$DEPLOYMENT_NAME" --type "String" --overwrite
      - aws ssm put-parameter --name "/myapp/DOCKER_HUB_REPO" --value "$DOCKER_HUB_REPO" --type "String" --overwrite

artifacts:
  files:
    - appspec.yml
    - application_stop.sh
    - after_install.sh
    - before_install.sh
    - application_start.sh
    - validate_service.sh
    - Dockerfile
    - requirements.txt
    - ui.py

cache:
  paths:
    - '/root/.cache/pip/**/*'
